version: '3.8'

services:
  # Academic Assistant API
  acad-assistant:
    build: .
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=mistral:7b
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
    depends_on:
      - ollama
    restart: unless-stopped
    networks:
      - acad-assistant-network

  # Ollama service for local LLM inference
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    restart: unless-stopped
    networks:
      - acad-assistant-network
    # GPU support (uncomment if you have NVIDIA GPU)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Optional: Redis for caching (can be added later)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - acad-assistant-network

  # Optional: PostgreSQL for data storage (can be added later)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: acad_assistant
  #     POSTGRES_USER: ${POSTGRES_USER:-admin}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - acad-assistant-network

volumes:
  ollama_data:
  # redis_data:
  # postgres_data:

networks:
  acad-assistant-network:
    driver: bridge
